<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="Utilities.targets" />
    
    <PropertyGroup Condition=" '$(OS)' != 'Windows_NT'">
        <!-- We need to launch nuget.exe with the mono command if we're not on windows -->
        <NuGetToolsPath>$(MSBuildThisFileDirectory)</NuGetToolsPath>
        <PackagesConfig>packages.config</PackagesConfig>
        <PaddedSolutionDir>"$(PackagesDir)"</PaddedSolutionDir>
        <MonoExe Condition="$(MonoExe) == '' and Exists('/usr/bin/mono')">/usr/bin/mono</MonoExe>
        <MonoExe Condition="$(MonoExe) == '' and Exists('/usr/local/bin/mono')">/usr/local/bin/mono</MonoExe>
        <MonoExe Condition="$(MonoExe) == '' and Exists('/Library/Frameworks/Mono.framework/Versions/Current/Commands/mono')">/Library/Frameworks/Mono.framework/Versions/Current/Commands/mono</MonoExe>
        <MonoExe Condition="$(MonoExe) == ''">mono</MonoExe>
    </PropertyGroup>

    <Target Name="_GetAssemblyInfo" Condition="$(AssemblyPath) != ''">
        <GetAssemblyInfo AssemblyFileName="$(AssemblyPath)">
			<Output TaskParameter="AssemblyInformationalVersion" PropertyName="AssemblyInformationalVersion" />
			<Output TaskParameter="AssemblyTitle" PropertyName="AssemblyTitle" />
			<Output TaskParameter="AssemblyDescription" PropertyName="AssemblyDescription" />
			<Output TaskParameter="AssemblyCopyright" PropertyName="AssemblyCopyright" />
			<Output TaskParameter="AssemblyCompany" PropertyName="AssemblyCompany" />
			<Output TaskParameter="AssemblyName" PropertyName="AssemblyName" />
        </GetAssemblyInfo>
        <PropertyGroup>
	        <NugetBuildProperties>Title=$(AssemblyTitle);Description=$(AssemblyDescription);Author=$(AssemblyCompany);Copyright=$(AssemblyCopyright);Id=$(AssemblyName)</NugetBuildProperties>
    	    <NugetBuildOptions>-Version $(AssemblyInformationalVersion)</NugetBuildOptions>
    	</PropertyGroup>
    </Target>
  
    <PropertyGroup>
        <!-- NuGet command -->
        <NuGetExePath Condition=" '$(NuGetExePath)' == '' ">$(NuGetToolsPath)nuget.exe</NuGetExePath>
        <PackageSources Condition=" $(PackageSources) == '' ">@(PackageSource)</PackageSources>
        
        <NuGetCommand Condition=" '$(OS)' == 'Windows_NT'">"$(NuGetExePath)"</NuGetCommand>
        <NuGetCommand Condition=" '$(OS)' != 'Windows_NT' ">$(MonoExe) --runtime=v4.0.30319 $(NuGetExePath)</NuGetCommand>

        <NupkgOutputDir Condition="$(NupkgOutputDir) == ''">$(MSBuildThisFileDirectory)\nuget</NupkgOutputDir>
        
        <RequireConsentSwitch Condition=" $(RequireRestoreConsent) == 'true' ">-RequireConsent</RequireConsentSwitch>
        <NonInteractiveSwitch Condition=" '$(VisualStudioVersion)' != '' AND '$(OS)' == 'Windows_NT' ">-NonInteractive</NonInteractiveSwitch>

        <!-- Commands -->
    </PropertyGroup>

    <Target Name="RestorePackages">
    	<PropertyGroup>
	        <RestoreCommand>$(NuGetCommand) install "$(PackagesConfig)" -source "$(PackageSources)"  $(NonInteractiveSwitch) $(RequireConsentSwitch) -solutionDir $(PaddedSolutionDir) $(NugetOptions)</RestoreCommand>
	    </PropertyGroup>
		<Exec Command="$(RestoreCommand)" />
    </Target>

    <Target Name="BuildPackage" DependsOnTargets="_GetAssemblyInfo">
	    <MakeDir Directories="$(NupkgOutputDir)"/>
    	<PropertyGroup>
	        <BuildCommand>$(NuGetCommand) pack "$(NuspecPath)" -BasePath "$(BasePath)" -Properties "Configuration=$(Configuration);Platform=$(Platform);$(NugetBuildProperties)" $(NonInteractiveSwitch) -OutputDirectory "$(NupkgOutputDir)" $(NugetBuildOptions)</BuildCommand>
	    </PropertyGroup>
        <Exec Command="$(BuildCommand)" />
    </Target>
    
    <Target Name="PublishPackage">
		<GetAssemblyInfo AssemblyFileName="$(OutputPath)$(AssemblyName).dll" Condition="$(AssemblyInformationalVersion) == '' AND $(NupkgName) == ''">
			<Output TaskParameter="AssemblyInformationalVersion" PropertyName="AssemblyInformationalVersion" />
		</GetAssemblyInfo>
		
		<PropertyGroup>
			<NupkgName Condition="$(NupkgName) == ''">$(AssemblyName).$(AssemblyInformationalVersion).nupkg</NupkgName>
	        <PublishCommand>$(NugetCommand) push $(NonInteractiveSwitch) "$(PackageOutputDir)\$(NupkgName)"</PublishCommand>
		</PropertyGroup>

        <Exec Command="$(PublishCommand)" />
    </Target>
</Project>
